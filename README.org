* BCeID SOAP Sync ðŸ§¼
This repository serves as tool for contacting the BCeID SOAP service for retrieving data about BCeID members. Its original intended purpose is to parse a CSV file from CCOF CMS and fill in missing information that wasn't captured in the original sign-up flow.

*NOTE*: This project is still a work in progress. Do not try to use it (yet)

** Usage
*** Setup
Clojure is a language built to run on the JVM. Aside from JDK you will also need [[https://leiningen.org/][Leiningen]] to get the dependencies installed.

1. Clone this repository
2. Ensure you have ~JDK21~ or better
3. Install [[https://leiningen.org/#install][Leiningen]]
4. Once ~lein~ is on your path, at the project root run ~lein install~ and then ~lein test~
5. Developers: check out some suggested [[https://clojure.org/guides/editors][editor plugins]] to make developing with Clojure way more fun.

*** CSV Data
This tool requires a CSV export of incomplete user data and is opinionated in how that CSV data is structured. See the [[test/data/input-test.csv][test data]] for an example.

*** Set Environment Variables
This tool requires various environment variables to be set for the application runtime to work. They are:

- =INPUT_CSV= - Absolute path to the input data
- =ACCOUNT_NAME= - The IDIR service account for looking data up with
- =ACCOUNT_PASSWORD= - The IDIR password for the =ACCOUNT_NAME=
- =ACCOUNT_GUID= - The IDIR service account GUID which is required for SOAP envelope calls
- =SERVICE_SITE= - The BCeID services URL to use
- =SERVICE_ID= - The ID for the services endpoint
- =API_PATH= - The path to the API root (e.g. ~path/to/client/version/~). *include the trailing slash*
- =ACTION_ROOT= - The API Path for the =SOAPAction= and =xmlns= (XML Namespace)

You may set these variables with a tool such as [[https://direnv.net/][direnv]]. If you are running NixOS, a shell file is provided for dependency installation. You need only add ~use nix~ to your ~.envrc~.

*** Running the tool
From the project root, run ~lein run~

** Customization
This tool is intended to be re-usable. A SOAP envelope of any kind may be built be using composition. See [[./src/ccof_names/xml_soap.clj][xml-soap]] to see how this can be done. The [[./src/ccof_names/bceid.clj][bceid]] service module will help you make API calls with your envelope. To change things, you need only extend this program as needed and modify the core entry point at [[./src/ccof_names/core.clj][core.clj]].
